# tclunqlite.test --
#
#	Tests for tclunqlite
#------------------------------------------------------------------------------

lappend auto_path .
if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2
    namespace import -force ::tcltest::*
}
loadTestedCommands
package require unqlite

#-------------------------------------------------------------------------------

test unqlite-1.1 {create a database, wrong # args} {*}{
    -body {
	unqlite ::db
    }
    -returnCodes error
    -match glob
    -result {wrong # args*}
}

test unqlite-1.2 {create a database, wrong # args} {*}{
    -body {
	unqlite ::db ":mem:" -in-memory
    }
    -returnCodes error
    -match glob
    -result {wrong # args*}
}

test unqlite-1.3 {create a database, successful} {*}{
    -body {
        catch {
            unqlite ::db ":mem:" -in-memory 1
        } result    
    }
    -result {0}
}

#-------------------------------------------------------------------------------

test unqlite-2.1 {Put} {*}{
    -body {
        set key "1234"
        set value "567890"

        ::db kv_store $key $value   
    }
    -result {1}
}


test unqlite-2.2 {Get} {*}{
    -body {
        ::db kv_fetch "1234"   
    }
    -result {567890}
}

test unqlite-2.3 {Delete} {*}{
    -body {
        ::db kv_delete "1234"   
    }
    -result {1}
}

#-------------------------------------------------------------------------------

catch {rename ::db {}}

cleanupTests
return
